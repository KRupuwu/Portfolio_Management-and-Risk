# -*- coding: utf-8 -*-
"""Downside Risk - Maximum Drawdown

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SmTF93s2lXCAduxatttFcSj3zpJJv1sC
"""

import yfinance as yf
import matplotlib.pyplot as plt

def analyze_drawdown(symbol, drawdown_pct=50, investment=100):
    """
    Simple drawdown analyzer
    symbol: stock ticker (e.g. 'AAPL')
    drawdown_pct: minimum drawdown % (e.g. 50)
    investment: investment amount (e.g. 100)
    """

    # Get stock data
    stock = yf.Ticker(symbol)
    data = stock.history(period="2y")['Close']

    # Calculate drawdowns
    peak = data.expanding().max()
    drawdown = (data - peak) / peak * 100

    # Find max drawdown point
    worst_day = drawdown.idxmin()
    max_dd = drawdown[worst_day]

    if abs(max_dd) < drawdown_pct:
        print(f"{symbol}: Only {abs(max_dd):.1f}% max drawdown (need {drawdown_pct}%+)")
        return

    # Calculate investment performance
    buy_price = data[worst_day]
    current_price = data[-1]
    shares = investment / buy_price
    current_value = shares * current_price
    return_pct = (current_value - investment) / investment * 100

    # Results
    print(f"\n{symbol.upper()} ANALYSIS:")
    print(f"Max drawdown: {abs(max_dd):.1f}%")
    print(f"Buy price: ${buy_price:.2f}")
    print(f"Current: ${current_price:.2f}")
    print(f"${investment} → ${current_value:.0f} ({return_pct:+.1f}%)")

    # Two charts
    fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(12, 8))

    # Chart 1: Stock Price
    ax1.plot(data.index, data, label=f'{symbol} Price', linewidth=2)
    ax1.scatter(worst_day, buy_price, color='red', s=100, label='Buy Point')
    ax1.axhline(y=current_price, color='green', linestyle='--', alpha=0.7, label='Current Price')
    ax1.set_title(f'{symbol}: ${investment} → ${current_value:.0f} ({return_pct:+.1f}%)')
    ax1.set_ylabel('Price ($)')
    ax1.legend()
    ax1.grid(True, alpha=0.3)

    # Chart 2: Drawdown
    ax2.fill_between(data.index, drawdown, 0, alpha=0.7, color='red')
    ax2.scatter(worst_day, max_dd, color='darkred', s=100, label=f'Max Drawdown ({abs(max_dd):.1f}%)')
    ax2.axhline(y=-drawdown_pct, color='orange', linestyle='--', label=f'{drawdown_pct}% Threshold')
    ax2.set_title('Drawdown from Peak')
    ax2.set_ylabel('Drawdown (%)')
    ax2.set_xlabel('Date')
    ax2.legend()
    ax2.grid(True, alpha=0.3)

    plt.tight_layout()
    plt.show()

    return {symbol: {'invested': investment, 'current': current_value, 'return': return_pct}}

# Usage examples:
# analyze_drawdown('NFLX', 50, 100)
analyze_drawdown('NVDA', 30, 100)